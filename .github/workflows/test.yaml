name: Test Python package

on: [ push, pull_request ]

jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.8", "3.9", "3.10", "3.11" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade black flake8 pylint mypy types-PyYAML pytest pytest-cov coveralls
          pip install .[dev]
      - name: Validate coding conventions
        run: |
          black classparse --check --diff
          black ./*.py --check --diff
      - name: Lint with flake8
        run: |
          flake8 classparse --count --select=E,F,W,C --show-source --max-complexity=10 --max-line-length=120 --statistics
      - name: Lint with pylint
        run: |
          pylint classparse
      - name: Lint with mypy
        run: |
          mypy classparse --check-untyped-defs
      - name: Verify README.md
        run: |
          if [ "${{ matrix.python-version }}" == "3.10" ]; then python update_readme.py --verify; fi
      - name: Test with pytest
        run: |
          pytest --cov=classparse
      - name: Coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: ${{ matrix.test-name }}
          COVERALLS_PARALLEL: true
        run: |
          coveralls --service=github

  coveralls:
    name: Indicate completion to coveralls.io
    needs: test
    runs-on: ubuntu-latest
    container: python:3-slim
    steps:
    - name: Finished
      run: |
        pip3 install --upgrade coveralls
        coveralls --service=github --finish
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
